#!/bin/sh
#
# Runs at the end of git flow feature start
#
# Positional arguments:
# $1    The friendly name of the branch
# $2    The origin remote
# $3    The full branch name (including the feature prefix)
# $4    The base from which this feature is started
#
# The following variables are available as they are exported by git-flow:
#
# MASTER_BRANCH - The branch defined as Master
# DEVELOP_BRANCH - The branch defined as Develop
#
NAME=$1
ORIGIN=$2
BRANCH=$3
BASE=$4

# Implement your script here.

get_free_branch_id() {
    #Recupero todos los IDS usados y los ordeno ascendente
    previos=$(git config --get-regexp "toba.branch" 2>&1 | awk '{ print $2 }' | sort -u)    
     if [ $? -eq 0 ] && [ ! -z "$previos" ]; then        
        #Busco algun gap en la secuencia
        proxid=$(echo "$previos" | awk '$1!=p+1{print p+1}{p=$1}') 
        #Devuelvo id-1 para que compense la suma luego y retorno
        [ $?=0 ] && [ ! -z "$proxid" ] && echo $(($proxid-1)) && return                     
        
        #Busco el mayor de la secuencia y lo devuelvo
        proxid=$(echo "$previos" | sort -nr | head -n1)                                     
        [ $?=0 ] && [ ! -z "$proxid" ] && echo $proxid
     fi
     #Fallback en el recibido para caso inicial
     echo $1                                                                                
}

    if [ $NAME = $DEVELOP_BRANCH ]; then
        echo 'La puta que vale la pena estar vivo ' 
    else
        #Mirar cual es el ultimo nro, si no existe agregar id branch 0 
        idactual=$(git config --local --get toba.developerid 2>&1)
        if [ $? ] && [ "$idactual" = "1" ]; then  
            #Inicializo el id y agrego la entrada
            $(git config --local --add toba.developerid 0)
            idactual=0
        fi
        
        #Buscar ids de branches previos
        idfinal=$(get_free_branch_id "$idactual")
        
        #Le agrego 1 al idfinal modulo 100 para que no pise otro rango
        idnuevo=$(echo "scale=0; ($idfinal + 1)%100" | bc)            
        variable=$(bin/toba instalacion_silenciosa set_id_branch --id-branch "$idnuevo")
        $(git config --local --replace-all toba.developerid "$idnuevo")
        $(git config --local --add "toba.branch.$BRANCH.id" "$idnuevo")
    fi
    
exit 0
