
	Esquema de personalizaciones Guarani
	
	A. Interface Grafica
	--------------------

	1. Agregar operaciones al sistema
	
		- Se crean elementos propios en base a los componentes disponibles en la infraestructura.
		- Se crea una operacion nueva con los parametros necesarios para que sus elementos se invoquen (SQL).
		- El usuario es responsable mantener esa definicion en un catalogo propio.
		- El usuario debe encargarse de que sus definiciones 
			impacten en el sistema despues de un cambio de version (ejecutar SQL).

	2. Modificar operaciones existentes
	
		2.1 Elementos visuales ( DataWindows: formularios, reportes)
		
			- Se realiza un copia del elemento provisto por el SIU. 
				( La unidad de codigo nueva se mantiene en un espacio separado del codigo provisto por el SIU )
			- Se modifica la copia de acuerdo al cambio que se desea realizar.
			- Se modifican los parametros de la operacion para que se consuma el objeto propio y no el del SIU (SQL).
			- El usuario es responsable mantener esa definicion en un catalogo propio.
			- El usuario debe encargarse de que sus definiciones impacten 
				en el sistema despues de un cambio de version (ejecutar SQL).
			- El usuario es responsable de verificar si el objeto que sobreescribio sufrio algun cambio en la nueva version.
				( El SIU provee una lista de modificaciones realizadas en la nueva version )
			
		2.2 Comportamientos ( UserObjects, Windows)
		
			- Se hereda el elemento provisto por el SIU y se redefine el evento que se necesita.
				( La unidad de codigo nueva se mantiene en un espacio separado del codigo provisto por el SIU )
			- Si el evento posee un logica determinada, la misma se copia en el hijo y se realizan los cambios.
				(Tambien el usuario puede notificar al SIU la necesidad, para que que se modifique el codigo 
					y sus cambios queden en una ventana mas acotada )
			- Se modifican los parametros de la operacion para que se consuma el objeto propio y no el del SIU (SQL).
			- El usuario es responsable mantener esa definicion en un catalogo propio.
			- El usuario debe encargarse de que sus definiciones 
				impacten en el sistema despues de un cambio de version (ejecutar SQL).
			- El usuario es responsable de resolver posibles conflictos si el evento del ancestro cambio.
				( El SIU provee una lista de modificaciones realizadas en la nueva version )
			
	B. Base de datos
	----------------
	
	1. Triggers
		
		- El usuario puede agregar la llamada a un procedure propio en cada trigger
		- El usuario es responsable mantener esa definicion en un catalogo propio.
		- El usuario debe encargarse de sus definiciones impacten en el sistema despues de un cambio de version.
	
	2. Procedures
		
		- Los procesos centrales tienen llamadas a procedures vacios que la universidad puede definir.
		- El usuario es responsable mantener esa definicion en un catalogo propio.
		- El usuario debe encargarse de sus definiciones impacten en el sistema despues de un cambio de version.

	C. Controles configurables
	--------------------------
	
		- La llamada a los puntos de control estan harcodeadas en el configo fuente 
			(el momento del disparo y los parametros que recibe).
		- Llamar a un nuevo punto de control o modificar los parametros de una llamada 
			implican heredar el elemento y escribir la llamada (Mecanismo explicado en A.2.2).
		- Existe una interface grafica que permite activar o desactivar un control, 
			en un contexto determinado (operacion, evento).
		- Agregar un control a un punto de control existente implica:
			- Crear el procedure que realiza el control.
			- Asociar el control al punto de control (SQL).
	
	D. Parametros del sistema
	-------------------------
		
		- Existen parametros que defienen el comportamiento general del sistema.
		- Existe una interface grafica que permite realizar esta configuracion.		
					
	E. Mensajes del sistema
	-----------------------
	
		- El usuario puede modificar los mensajes del sistema.
		- como?
