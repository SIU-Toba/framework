
---------------------------------------------------------
---  Redistribucion de responsabilidades entre CAPAS  ---
---------------------------------------------------------

		Responsabilidades del CN
		************************
		
		- Filtrar el flujo de datos que solicita la interface (Acceso)
		- Manejar cosas de alto nivel 
			- Derechos, permisos
			- Controles configurables
			- Modos generales de la operacion
			- Controles configurables
		- Procesar
		- Validacion de negocio

		Ventajas
		--------

		- El CN se encarga de una tarea de alto nivel (Maneja un dato complejo a travez de un CI?)
		- Es mas facil encontrarle una logica comun a los CNs
		- Es mas facil llevarlos hacia un lugar declarativo


---------------------------------------------------------

		Responsabilidades del CI
		************************

		- Mantener estado de la interface (Datos de negocio y flags)
		- Soporte a los eventos de los EI
**		- Carga de los EI ( Ruteo al CN )
		- Customizacion de botones, etapas, tabs, carga de EIs, etc.
		- Validacion de CARGA VALIDA en el cliente y en el servidor
		
		Ventajas
		--------

		- El uso de la herencia se corresponde mas a la distribucion de tipos de 
			interface disponibles (En el CN reclamaba herencia multiple)
		- Emergen componentes visuales complejos reutilizables (ej: apertura de partidas), 
			que piden respetar interfaces de alto nivel (y no cosas hiperdetalladas)
		- Es mucho mas transparente la migracion de los controladores de interface a javascript
		- La linea de codificacion del comportamiento de la interface puede reclamar 
		 	escritura de HTML o JS. En este contexto es menos hereje hacer algo asi
		- Como tengo la informacion del EI, se puede apuntar a una generalizacion
		 	del proceso de crear la logica me meneja eventos
		- La customizacion pasa a ser directamente por herencia (no hay que activarla por la interface)
			Esto hace que el codigo y los EI esten en el mismo lugar...

---------------------------------------------------------
		
	PENSAR:

		- Multiples CIs con estado... como memorizarlo...? (analisis sobre la memoria en el toba)
		- Lograr direccionamiento interno CI
		- Pensar la logica del procesar (Como se recuperan datos?)
		- Como se lleva a cabo la carga de las interfaces en la modificacion
			(El paso tiene toda la info (docs, partidas... como pedirla toda junta?? -- si la pide el CI de tabs?) )
		- Sacar la customizacion por interface y lograr una customizacion logica por herencia
		- Aplicacion del esquema nuevo a ABMS simples
		- Hay que ver si la arquitectura soporta tantos objetos cargados

---------------------------------------------------------