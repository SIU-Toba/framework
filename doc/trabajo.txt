	---------------------------------------------------------------------------

							TRABAJO pendiente en el TOBA

	---------------------------------------------------------------------------
	-------------------------  ELEMENTOS DE INTERFACE -------------------------
	---------------------------------------------------------------------------

	*** EF:
		-> VALIDACION
			-> SERVER: Excepciones.
			› CLIENTE: No disparar un ALERT, disparar una exepción. Elaborar una forma distinta de señalar el origen.
						Validación 'poco ruidosa' particular de un ef cuando cambia el estado
		-> 'NULL' cambiar por NULL (por ahora el ei_formulario lo resuelve en el obtener_datos y el cargar_datos)
		-> Nuevos:
			Para Multilinea:
				-> ef_nota (cuando pasas el mouse por encima muestra un mensaje)
				-> ef_vinculo
				-> ef_template
			-> ef_upload (hay que razonarlo junto a una ventana de codigo en el server. 
					Hay que decidir donde poner esta ventana)
			-> ef_ini_sintaxis	Ef que chequea sintaxis de inicializacion de parametros 
				(Hay uno hecho por Leo que esta terminado y no se asocio al editor de EFs...)
			-> ef_multi_selecccion 
				º Utilizando <SELECT> (conjunto muy chicos de datos, en general es un componente difícil de entender)
				-> Utilizando un conjunto de checkbox (muy explicito, ideal para conjunto chico de datos)
				-> Utilizando dos <SELECT> pasando los datos de uno a otro (muy gráfico)
				-> Hay que buscar uno para conjunto grandes de datos 
					(ej: quiero seleccionar 5 clientes de un total de 20.000, basado en el popup)
		-> Refactoring de los actuales:
			› Migración del JS suelto a las clases (esto incluye el código cascada)
			› Factor común en el arbol de herencia, tomando en cuenta la fuente de los datos (DAO, SQL, array..)
			-> Construir las etiquetas usando <label for> con atajos de teclado
			-> Seguridad 
		->Cascadas
			-> Hay que integrar el manejo de CASCADAS con los combos que manejan mas de un VALOR!!!!		
			-> cascada no seteada no obligatorio. Relajar las validaciones obligatorias si el padre no se cargo.
			-> Distribución de responsabilidades con el form
		-> Los proyectos deberian tener un repositorio de EFs instanciados 
			(Un nuevo lugar del administrador para definir EFs que se usan en muchos ei_form)
		-> Migración de visibilidad de interfaces
		-> Método comparar estado (para determinar si se modifico o no el form)

	*** EIs
		-> Método general para plegar y desplegar
		
	*** JS en EI
!		º  Facilidades en la extension del JS: 
			º Documentar forma de extensión. (extension_js_formularios.txt.php)
			º Modificar metodos de extension en PHP. Función crear_objeto_js y extender_objeto_js
		-> Chequear version de JS, consumo de memoria, browser soportados.
!		-> Inventario de consumo de js concreto

	*** EI_FORM
		-> Mejorar el disparo de eventos (Analizar si la modificación afecto el set de datos)
		-> Pensar forma de agregar nuevos eventos
		-> Eventos
			-> Form reutilizado con distintos eventos
!			-> Homologar con los botones actuales
!			-> Seprar la generación de botones de la descripcion de cuales van
!			-> Extender la declaración de botones
		-> Utilización de shotcuts para acceder a los efs (por ejemplo N&ombre se dispara con ALT + o)
		-> Personalización del layout de los efs. Idear una forma de agruparlos con un label
		-> Cuando una cascada sale a buscar una respuesta al server, el submit del form se deberia desactivar 
			hasta que vuelva
		-> El submit se debe poder correr una sola vez

	*** ML: 
		º Procesamiento de filas:
!		-> Agregar y eliminar filas: Parametrizar comandos disponibles (agregar_eliminar, mover, ver_numero_fila)
		› Mejorar el disparo de eventos (relación con buffer)
			-> A: Clase JS indica los cambios puntuales al ei, con una extensión sepa manejar un buffer.
			-> B: Nuevo buffer que haga diff de datos.
		-> Selección múltiple de líneas y operaciones sobre la selección.
		
	*** EI_CUADRO
!		-> Evento ELIMINACION (con popup preguntando...)
!		-> sistematizar totales
!		-> Mostrar fila seleccionada (estilo tr)
		-> Refactoring de estilos
			-> CSS 'no_wrap' en vez de '&nbsp;', mayusculas, otros...
			-> Esquema aditivo de estilos
		-> Utilizar los titulos de las columnas en la generacion de PDF
		-> Ordenamiento en el cliente (ver WebFX)

	*** EI_FILTRO
		-> En el objeto_filtro extender ei_filtro, unificar dimensiones con efs

	*** EI Reportes
!		-> Analizar
		-> Cortes de control fácil de crear y entender	

	-------------------------------------------------------------------------
	-------------------------  DESARROLLO EN CAPAS  -------------------------
	-------------------------------------------------------------------------

	*** CI
		-> Un CN tiene que tener una forma de mandar a un CI multitab a un tab (falla validacion server)
		-> ME_TAB con secuencia estricta
		-> Tabs verticales
		-> Barra superior igual a la inferior optativa.
		-> Un CI tiene que poder ocultar tabs en el server, e inhabilitarlos en el cliente. 
			(y cuando tenga una clase JS, que lo haga de una manera unificada)
		-> La forma de renderizar la cola de mensajes tiene que poder customizarse
		-> Layout??

	**** CN
	
		-> Derechos (Requiere un administrador de derechos)
		-> Controles configurables 

	**** BUFFER
	
		-> Filtrado de registros
		-> Multitabla de con correspondencia debil

	--------------------------------------------------------------------------------
	-------------------------  DESARROLLO SOBRE EL MODELO  -------------------------
	---------------------------------------------------------------------------

	*** objeto_filtro
		-> 	Flag que indique el cambio de where
		->	Unificar la jerarquia con el ei_form para soportar cascadas
		->	(perfil de datos)Implementar las dimensiones restringidas por comparacion

	*** objeto_mt_abms
		->	Terminar de sintetizar la jerarquia de herencia (heredar del CI, usar un UT_FORM)		
		->	Hacer que los botones sean dinamicos
		->	Mecanismo para tener columnas que funciones en la cascada pero no se graben en la tabla
	
	*** objeto_cuadro
		-> Paginar, con ordenamiento total	
		-> Boton ocultar de siu-quilmes
		
	-------------------------------------------------------------
	-------------------------  GENERAL  -------------------------
	-------------------------------------------------------------

		-> Foco automatico
		-> HTML y CSS
			-> Empezar a utilizar el DOCTYPE, va a pasar al IE de modo compatible a modo CSS, se ven mal algunas cosas
				Sin el DOCTYPE no se puede validar el documento y no funcionan cosas avanzadas de CSS (ej. tablas con scroll)
!!		->	Implementar como clases los includes iniciales (menú, etc) para permitir una mejor customizacion
				- El menu actual consume demasiados recursos del navegador, tiene que haber una forma simple de 
					elegir entre varios menues.
		->	Jerarquia de excepciones (diferenciar excepciones de tiempo de ejecución de las de tiempo de definicion)
		->	Carga de objetos toba
			- Lugar unificado de carga (actualmente solicitud y objeto)
			- Excepciones
		->	Javascript en el login que deje guardado en el HILO el browser que se esta utilizando
		->	Armar una entrada al sistema (en modo usuario final) que abra un popup sin botones de volver, etc.
		->	Hay que pensar como se manejan los EI que son casi identicos
				Hay que introducir un esquema que no implique clonar y modificar, una especie de herencia de metadatos
				(algo asi como un link a otro objeto con una modificacion...)
		-> Mejorar el LOGGER a pantalla.
		->	Se puede utlizar SSL de manera detallada? (Controlar certificados, etc.)
		->	ACCESO
			-	Esquema de manejo de usuarios de distintas instancias para una instalacion
			-	Abstraccion del login para soportar mecanismos externos
			-	Cuando se crea un proyecto hay que crear en forma optativa un manejador de usuarios para el mismo
		->	Multimotor
		-> 	Refactorizar el manejo de la fuente de datos
		->	Separacion de las tablas de metadatos por dominios (para distribuirlas entre instancias, reemplazar algunas por 
			PHP compilado, etc.)
		->	Hacer una migracion completa a PHP5 (migrar: constructores, visibilidad de metodos y propiedades, usar interfaces, 
			eliminar referencias globales)
		->	Completar el esquema de ayuda online
		-> Las entidades mas complejas necesitan una forma de persistir datos durante la sesion (recordar su estado inicial).
		-> mantener_estado_sesion no respeta el no acceso al hilo
		-> Modificación de los tooltips
		-> Seguridad
			-> Encriptar las claves de usuarios y de logueo a otros motores en la DB
			-> Aplicar una politica de no declarar parametros de conexion en la fuente de datos 
				(hacer siempre link al archivo de instancias)

	*** JS General
		-> Clase toba en js: 
			-> Colgar eventos al onload
		-> Encadenacion standard de eventos

	--------------------------------------------------------------------
	-------------------------  ADMINISTRACION  -------------------------
	--------------------------------------------------------------------

	*** Inteface ADMINISTRATIVA

		-> CI: mostrar plan de ruteo y de carga
		-> CI: clonar bien (incluir dependencias...)
		-> Separar objetos por modulos
		-> Eliminar items completos
		-> Eliminar carpetas completas
		-> Exportar/importar items
		-> Cuando se modifica la fuente de datos, testear que la base exista (o poner un combo con las bases) 
	
	*** Interface CONSOLA
	
		-> Los scripts de dumpeo tienen que estar preparados para manejar N instancias
		-> Hay que mejorar el generador de BUFFERS
		-> Script que haga que los scripts de consola sean funcionales en linux


	--------------------------------------------------------------------
	-------------------------  DOCUMENTACION  --------------------------
	--------------------------------------------------------------------
	
	->	Plan de capacitacion
	->	WIKI
	->	Online para guiar el desarrollo con el administrador.
	->	Offline para entender conceptos.
	->	Implementar un foro y un sitio de referencia
	->	Lineamientos al programador
		->	Uso de directorios
		->	Convenciones 
	->	Glosario
	
	--------------------------------------------------------------------
	---------------------------- DUDAS GENERALES------------------------
	--------------------------------------------------------------------		
	
	-> ¿La tabla apex_objeto_msg no debe tener como clave también el proyecto? Está tirando error de PK con un mensaje de otro proyecto
	
	--------------------------------------------------------------------
	REFERENCIAS
	--------------------------------------------------------------------
	-> 			Pendiente
	› 			En desarrollo
	º 			Terminado, para revisar
	-D			Dialogo!
	??			Explicar más
!				Prioridad avanzada
	--------------------------------------------------------------------
	