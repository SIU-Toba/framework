
ASISTENTE ABM simple

-----------(1) Definicion basica


	* Usa filtro?		*** molde_operacion_abms: gen_usa_filtro = 1
		(SI no se usa filtro, hay que ocultar las dos columnas en el ML)
	* Detalle filas
		* Se proponen tipos de datos para el DT en base a apex_molde_operacion_tipo_datos
	
-----------(2) Configuracion avanzada (ya se puede generar)

TAB Cuadro
----------

	* Eliminar filas?	*** molde_operacion_abms: cuadro_eliminar_filas = 1

	* Origen DATOS: 				
	
			* Elegir si el origen de datos es el datos_tabla o una consulta_php
						*** molde_operacion_abms: cuadro_carga_origen: 'datos_tabla' o 'consulta_php' (ATENCION: no puede quedar vacio!)

				* Si es el datos_tabla: no definir metodo, clase ni archivo.
					(se asume get_listado(), hay que buscar si existe para presentar o no el
					generador de SQL)

				* Si es una consulta_php: , definir el metodo, clase y archivo.
					Se elege la clase con un combo que liste las definidas

	* Definir un EOF relacionado con la entidad
						*** molde_operacion_abms: cuadro_eof 
	* Definir el ID de la tabla??? (aparentemente no)
						*** molde_operacion_abms: cuadro_id 
	* Elegir un estilo grafico para cada columna
						*** molde_operacion_abms: cuadro_id 
	
TAB Formulario
--------------

	* Filas COMBOS: Definir el origen / sql de cada combo.

TAB Filtro (si existe)
----------------------

	* Mostra el operador de comparacion de cada fila
	* Ofrecer un campo para poner el nombre del campo SQL a machear por si no se quiere usar el nombre de la col??
	
	NUEVOS!!
		
	* filtro_comprobar_parametros = 1: No se setea el filtro al menos que algun parametro del mismo no sea NULL
	* cuadro_forzar_filtro = 1: No se muestra el cuadro hasta que no se setee el filtro


TAB Aspecto interface
---------------------

	* Separar en pantallas?						gen_separar_pantallas = 1
	* Anchos y altos.
	* Titulos especificos para los EIs

#############################################################

Manejo de creacion de consultas_php
------------------------------------
		
	Se ingresa con: archivo, clase, metodo

	-> Existe archivo?
		* NO
			-> Crear archivo
			-> Crear clase
			-> Crear metodo
		* SI
			-> Existe clase?
				* NO
					-> Hay codigo?
						* NO
							-> Crear clase
							-> Crear metodo
						* SI *******************> ERROR! Se pide cambiar el archivo.
				* SI
					-> Existe metodo?
						* NO
							-> Crear metodo al final
						* SI
							*******************> Se avisa que se va a sobreescribir un metodo
							-> Reemplazar metodo

Creacion de extension
---------------------

	-> Si exite archivo:
		**************> Se avisa que archivos se van a sobreescribir
		
###############################################################################3
		
Opciones de generacion
----------------------

	$asistente->cargar_plan()
	$asistente->get_opciones()
		Lista para alimentar el ML, recordset con columnas opcion/estado
	$asistente->get_bloqueos()
		Lista de cosas que hacen que no se pueda avanzar en la generacion
	
	-> Cuando se prepara el plan, se crea la cola de preguntas, que se muestran al usuario,
		La interface usa esto para alimentar un ML con checkbox, retorna al usuario como opciones.
	-> En el caso de que algo trabe la generacion, se le comenta al usuario lo que tiene que hacer
		y no se muestra


###############################################################################3

	FALTA:
	
		- Mostrar las cosas generadas despues de ejecutar
			- Poder: ejecutar el item, ir a los editores, abrir los archivos, cargar
					el arbol de la operacion, etc.

		- Manejar en forma centralizada la generacion de archivos que no son extensiones.
			- Que pasa si se tienen que meter dos metodos en la misma clase
			- Ver la manera de ofrecer opciones de generacion de estos archivos
				- hay que ejecutar todo el arbol de controles
			
		- Injeccion de clausulas where en un SQL


