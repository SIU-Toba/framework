==========================================================
	Criterio de consumo de bases desde cada contexto
==========================================================

	- Nucleo: info_instancia::get_db()	--- Esto casi no es necesario porque todas las consultas estan dentro de info_instancia
											- No utilizar consultar_fuente NI toba::get_db() excepto para componetes (usan fuentes)
	- Modelo: contexto_info::get_db()	--- Esto devuelve la base seteada con contexto_info::set_db()
											- No utilizar consultar_fuente NI toba::get_db()
											- Esto no es asi en el segmento administrativo, donde la base se le pide a la instalacion
	- Proyectos: toba::get_db()			--- Esto devuelve la conexion de una fuentes de datos, igual a consultar_fuente

==============================================
	Modificaciones		
==============================================

	------------------- cambios en ex db.php en lib (shortcuts)

	function ejecutar_sql -> function ejecutar_fuente
	// No va mas
	function abrir_base($id,$parm)
	function abrir_fuente_datos($id, $proyecto=null)
	function existe_conexion($id)
	function obtener_fuente($id, $ado=null)
	function recuperar_datos($sql, $fuente="instancia", $ado=null)
	function recuperar_secuencia($secuencia, $fuente="instancia")

	-------------------- Fuera de la la cabecera de la base: db.php ---------------------------
	/**
	*	@deprecated Desde 0.8.3
	*	@see ejecutar
	*/
	function ejecutar_sql($sql)
	{
		logger::instancia()->obsoleto(__CLASS__, __METHOD__, "0.8.3", "Usar método ejecutar");
		$this->ejecutar($sql);
	}

	------------------- vuela el RETURN --------------------------------------------------------

	function ejecutar_transaccion($sentencias_sql, $fuente="instancia")
	{
		dba::get_db($fuente)->ejecutar_transaccion($sentencias_sql);
		$mensaje = "La transaccion se ha realizado satisfactoriamente";
		return array(1, $mensaje);
	}

	---------------- Forma de linkear la instancia

	if ( $datos_db['link_base_archivo'] == 1 ) {
		
	-------------------- fuente por defecto
	
	if ( is_null( $nombre ) ) {
		//ATENCION: estoy hay que sacarlo no esta bueno asumir 'instancia'
		$nombre = (defined('fuente_datos_defecto')) ? fuente_datos_defecto : 'instancia';
	}

	-------------------- Constante tipo de FETCH			

	define('apex_db_asociativo', ADODB_FETCH_ASSOC);
	define('apex_db_numerico', ADODB_FETCH_NUM);
				
	define('toba_db_fetch_asoc', PDO::FETCH_ASSOC);
	define('toba_db_fetch_num', PDO::FETCH_NUM);

	
	--------------------
	
	function consultar($sql, $tipo_fetch=null, $obligatorio=false, $compatibilidad=false)
	function consultar_fuente($sql, $id_fuente=null, $tipo_indices=null, $obligatorio=false)

	x

	function consultar($sql, $tipo_fetch=null)
	function consultar_fuente($sql, $id_fuente=null, $tipo_indices=null)
	